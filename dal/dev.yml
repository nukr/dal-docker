version: "2"
services:
  api:
    build:
      context: ../../old-dal
      dockerfile: Dockerfile
    command: nodemon -x "babel-node src/server"
    environment:
      - NODE_ENV=development
      - JWT_SECRET=@@@@@@@@
      - RETHINKDB_HOST=rethinkdb
      - RETHINKDB_PORT=28015
      - REDIS_HOST=redis
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - GCLOUD_PROJECT=instant-matter-785
      - GCLOUD_PUBSUB_TOPIC=dal_local
      - GCLOUD_PUBSUB_DISABLED=false
      - GOOGLE_APPLICATION_CREDENTIALS=/credentials/credentials.json
      - PUBSUB_EMULATOR_HOST=pubsub:8344
    volumes:
      - "../../old-dal/src:/opt/app/src"
    links:
      - rethinkdb
      - elasticsearch
      - redis
      - kdf
      - pubsub
    ports:
      - "12345:12345"
      - "23456:23456"
  rethinkdb:
    image: rethinkdb
    ports:
      - "8080:8080"
      - "28015:28015"
  elasticsearch:
    image: asia.gcr.io/instant-matter-785/elasticsearch_ik:2.3.5
    ports:
      - "9200:9200"
  redis:
    image: redis
    ports:
      - "6379:6379"
  initial:
    image: asia.gcr.io/instant-matter-785/meepshop-api-initial:2.2.1
    environment:
      - DAL_URL=http://api:12345
      - UPDATE_VERSION=latest
      - USER_NAME=meepshop
      - USER_PASSWORD=meep123456
      - SERVICE_NAME=meepshop
    links:
      - api
    ports:
      - "8888:15264"
  kdf:
    image: asia.gcr.io/instant-matter-785/kdf:0.1.3
    environment:
      - SECRET=1234
    ports:
      - "9999:8888"
  input:
    # command: go run main.go job.go worker.go
    # build:
    #   context: /Users/nukr/workspace/gocode/src/github.com/nukr/input
    #   dockerfile: Dockerfile.dev
    image: asia.gcr.io/instant-matter-785/input:3.0.28
    links:
      - elasticsearch
      - pubsub
    environment:
      - SERVER_ESHOST=elasticsearch
      - SERVER_ESPORT=9200
      - SERVER_PROJECT=instant-matter-785
      - SERVER_TOPIC=dal_local
      - SERVER_SUBSCRIPTION=input_es_local
      - GOOGLE_APPLICATION_CREDENTIALS=/credentials/credentials.json
      - PUBSUB_EMULATOR_HOST=pubsub:8344
  pubsub:
    image: google/cloud-sdk:latest
    command: gcloud beta emulators pubsub start --host-port 0.0.0.0:8344
    ports:
      - "8344:8344"
  storage:
    image: openzipkin/zipkin-mysql:1.19.0
    container_name: mysql

  # The zipkin process services the UI, and also exposes a POST endpoint that
  # instrumentation can send trace data to. Scribe is enabled by default.
  zipkin:
    image: openzipkin/zipkin:1.19.0
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/tree/1.19.0/zipkin-server#environment-variables
    environment:
      - STORAGE_TYPE=mysql
      # Point the zipkin at the storage backend
      - MYSQL_HOST=mysql
      # Uncomment to disable scribe
      # - SCRIBE_ENABLED=false
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin=DEBUG
    ports:
      # Listen port for the Scribe transport
      - 9410:9410
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
    depends_on:
      - storage

  # Adds a cron to process spans since midnight every hour, and all spans each day
  # This data is served by http://192.168.99.100:8080/dependency
  #
  # For more details, see https://github.com/openzipkin/docker-zipkin-dependencies
  dependencies:
    image: openzipkin/zipkin-dependencies
    container_name: dependencies
    entrypoint: crond -f
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mysql
      # Add the baked-in username and password for the zipkin-mysql image
      - MYSQL_USER=zipkin
      - MYSQL_PASS=zipkin
      # Uncomment to adjust memory used by the dependencies job
      # - JAVA_OPTS=-verbose:gc -Xms1G -Xmx1G
    depends_on:
      - storage
